from enum import Enum
from json import dumps

from typer import Typer, Option, Argument, Exit
from rich import print, print_json
from malwarebazaar.api import Yaraify
from malwarebazaar.config import Config, YARAifyConfig


class QueryTypes(Enum):
    hash = "hash"
    yara = "yara"


yaraify_app = Typer(name="YARAify cli", help="Query YARAify from your command line!")


@yaraify_app.command(name="init", help="Initialize YARAify cli.")
def init(
        malpedia_key: str = Option(None, "-m", "--malpedia",
                                   help="Optional Malpedia key to use for yara rule searches."),
        api_key: str = Argument(..., help="The API key from your YARAify account.")
):
    c = Config.get_instance()
    c.yaraify = YARAifyConfig(
        api_key=api_key,
        malpedia_key=malpedia_key
    )
    c.save_config()


@yaraify_app.command(name="query", help="Query the YARAify API.")
def query(
        json: bool = Option(False, "-j", "--json", help="Output raw JSON response."),
        query_type: QueryTypes = Argument(..., show_choices=True, help="The type of query to send to the API."),
        query: str = Argument(..., help="The search term to use.")
):
    config = Config.get_instance()
    yaraify = Yaraify(
        api_key=config.yaraify.api_key,
        malpedia_key=config.yaraify.malpedia_key
    )

    if query_type == QueryTypes.hash:
        data = yaraify.query_hash(query)
    else:
        print("[bold red]Currently only \"hash\" as query type is supported.[/bold red]")
        raise Exit(-1)

    if json:
        print(dumps(data, indent=4))
